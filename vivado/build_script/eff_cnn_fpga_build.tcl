#*****************************************************************************************
# Vivado (TM) v2021.1 (64-bit)
#
# eff_cnn_fpga_build_0.tcl: Tcl script for re-creating project 'eff_cnn_fpga'
#
# Generated by Vivado on Mon Aug 26 17:05:24 +0200 2024
# IP Build 3246043 on Fri Jun 11 00:30:35 MDT 2021
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (eff_cnn_fpga_build_0.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    <none>
#
# 3. The following remote source files that were added to the original project:-
#
#    "$origin_dir/../../vivado/ip_src/dsp_macro_addr_add_32_bit/dsp_macro_addr_add_32_bit.xci"
#    "$origin_dir/../../vivado/ip_src/dsp_macro_addr_mult_32_bit/dsp_macro_addr_mult_32_bit.xci"
#    "$origin_dir/../../vivado/ip_src/dsp_macro_mult_18_bit/dsp_macro_mult_18_bit.xci"
#    "$origin_dir/../../design/rtl_pckg/arith_pckg.sv"
#    "$origin_dir/../../design/rtl/sys_arr/add_cell.sv"
#    "$origin_dir/../../design/rtl_pckg/regmap_reg_pckg.sv"
#    "$origin_dir/../../design/rtl_pckg/regmap_pckg.sv"
#    "$origin_dir/../../design/rtl_pckg/proc_pipe_pckg.sv"
#    "$origin_dir/../../sw/sim_scripts/add_tree.sv"
#    "$origin_dir/../../design/rtl/sys_arr/add_tree_wrapp.sv"
#    "$origin_dir/../../design/rtl/sys_arr/add_wrapp.sv"
#    "$origin_dir/../../design/rtl_pckg/mem_pckg.sv"
#    "$origin_dir/../../design/rtl_pckg/perf_cnt_pckg.sv"
#    "$origin_dir/../../design/rtl/addr_gen/addr_gen.sv"
#    "$origin_dir/../../design/rtl_pckg/axi_if_pckg.sv"
#    "$origin_dir/../../design/rtl/batch_norm/batch_norm_unit.sv"
#    "$origin_dir/../../design/rtl/common/bram_simple_dual.sv"
#    "$origin_dir/../../design/rtl/addr_gen/conv_addr_gen.sv"
#    "$origin_dir/../../design/rtl/sys_arr/del_chain.sv"
#    "$origin_dir/../../design/rtl/top/dig_top.sv"
#    "$origin_dir/../../design/rtl/common/fifo.sv"
#    "$origin_dir/../../design/rtl/common/gen_mem_simple_dual.sv"
#    "$origin_dir/../../design/rtl/addr_gen/int_div.sv"
#    "$origin_dir/../../design/rtl/common/lead_zero_cnt.sv"
#    "$origin_dir/../../design/rtl/addr_gen/lin_addr_gen.sv"
#    "$origin_dir/../../design/rtl/interfaces/m_axis.sv"
#    "$origin_dir/../../design/rtl/main_ctrl/main_fsm.sv"
#    "$origin_dir/../../design/rtl/maxpool/maxpool_unit.sv"
#    "$origin_dir/../../design/rtl/main_memory/mmem.sv"
#    "$origin_dir/../../design/rtl/main_memory/mmem_if.sv"
#    "$origin_dir/../../design/rtl/sys_arr/mult_cell.sv"
#    "$origin_dir/../../design/rtl/sys_arr/mult_wrapp.sv"
#    "$origin_dir/../../design/rtl/nlin_f/nlin_f_unit.sv"
#    "$origin_dir/../../design/rtl/common/pipe_fifo.sv"
#    "$origin_dir/../../design/rtl/main_ctrl/regmap.sv"
#    "$origin_dir/../../design/rtl/main_ctrl/rst_gen.sv"
#    "$origin_dir/../../design/rtl/interfaces/s_axil.sv"
#    "$origin_dir/../../design/rtl/interfaces/s_axis.sv"
#    "$origin_dir/../../design/rtl/common/stream_wdt_conv.sv"
#    "$origin_dir/../../design/rtl/sys_arr/sys_arr.sv"
#    "$origin_dir/../../design/rtl/sys_arr/sys_arr_acc.sv"
#    "$origin_dir/../../design/rtl/sys_arr/sys_arr_bmm.sv"
#    "$origin_dir/../../design/rtl/sys_arr/sys_arr_cell.sv"
#    "$origin_dir/../../design/rtl/nlin_f/tanh_unit.sv"
#    "$origin_dir/../../design/rtl/common/uram_mem.sv"
#    "$origin_dir/../../design/rtl/top/dig_top_wrapp.v"
#    "$origin_dir/../../design/rtl/common/gen_mem_single.sv"
#    "$origin_dir/../../design/rtl/common/bram_single.sv"
#    "$origin_dir/../../design/rtl/sys_arr/test_arith_chain.sv"
#    "$origin_dir/../../sim/testbench/tb_blck_proc_pipe.sv"
#    "$origin_dir/../../sim/testbench/tb_macro_def.svh"
#    "$origin_dir/../../sim/testbench/tb_pckg.sv"
#    "$origin_dir/../../sim/testbench/tb_top.sv"
#    "$origin_dir/../../vivado/ip_src/tb_top_block_wrapper.v"
#    "$origin_dir/../../vivado/constr/eff_cnn_constr.xdc"
#    "$origin_dir/../../sim/testbench/tb_axis_driver.sv"
#    "$origin_dir/../../sim/testbench/tb_axi_driver.sv"
#    "$origin_dir/../../sim/testbench/tb_axis_monitor.sv"
#    "$origin_dir/../../sim/testbench/tb_top_power.sv"
#    "$origin_dir/../../vivado/wave_configs/tb_blck_proc_pipe_behav.wcfg"
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/../ip_src/dsp_macro_addr_add_32_bit/dsp_macro_addr_add_32_bit.xci"]"\
 "[file normalize "$origin_dir/../ip_src/dsp_macro_addr_mult_32_bit/dsp_macro_addr_mult_32_bit.xci"]"\
 "[file normalize "$origin_dir/../ip_src/dsp_macro_mult_18_bit/dsp_macro_mult_18_bit.xci"]"\
 "[file normalize "$origin_dir/../../design/rtl_pckg/arith_pckg.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/sys_arr/add_cell.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl_pckg/regmap_reg_pckg.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl_pckg/regmap_pckg.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl_pckg/proc_pipe_pckg.sv"]"\
 "[file normalize "$origin_dir/../../sw/sim_scripts/add_tree.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/sys_arr/add_tree_wrapp.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/sys_arr/add_wrapp.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl_pckg/mem_pckg.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl_pckg/perf_cnt_pckg.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/addr_gen/addr_gen.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl_pckg/axi_if_pckg.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/batch_norm/batch_norm_unit.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/common/bram_simple_dual.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/addr_gen/conv_addr_gen.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/sys_arr/del_chain.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/top/dig_top.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/common/fifo.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/common/gen_mem_simple_dual.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/addr_gen/int_div.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/common/lead_zero_cnt.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/addr_gen/lin_addr_gen.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/interfaces/m_axis.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/main_ctrl/main_fsm.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/maxpool/maxpool_unit.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/main_memory/mmem.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/main_memory/mmem_if.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/sys_arr/mult_cell.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/sys_arr/mult_wrapp.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/nlin_f/nlin_f_unit.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/common/pipe_fifo.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/main_ctrl/regmap.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/main_ctrl/rst_gen.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/interfaces/s_axil.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/interfaces/s_axis.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/common/stream_wdt_conv.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/sys_arr/sys_arr.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/sys_arr/sys_arr_acc.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/sys_arr/sys_arr_bmm.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/sys_arr/sys_arr_cell.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/nlin_f/tanh_unit.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/common/uram_mem.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/top/dig_top_wrapp.v"]"\
 "[file normalize "$origin_dir/../../design/rtl/common/gen_mem_single.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/common/bram_single.sv"]"\
 "[file normalize "$origin_dir/../../design/rtl/sys_arr/test_arith_chain.sv"]"\
 "[file normalize "$origin_dir/../../sim/testbench/tb_blck_proc_pipe.sv"]"\
 "[file normalize "$origin_dir/../../sim/testbench/tb_macro_def.svh"]"\
 "[file normalize "$origin_dir/../../sim/testbench/tb_pckg.sv"]"\
 "[file normalize "$origin_dir/../../sim/testbench/tb_top.sv"]"\
 "[file normalize "$origin_dir/../ip_src/tb_top_block_wrapper.v"]"\
 "[file normalize "$origin_dir/../constr/eff_cnn_constr.xdc"]"\
 "[file normalize "$origin_dir/../../sim/testbench/tb_axis_driver.sv"]"\
 "[file normalize "$origin_dir/../../sim/testbench/tb_axi_driver.sv"]"\
 "[file normalize "$origin_dir/../../sim/testbench/tb_axis_monitor.sv"]"\
 "[file normalize "$origin_dir/../../sim/testbench/tb_top_power.sv"]"\
 "[file normalize "$origin_dir/../wave_configs/tb_blck_proc_pipe_behav.wcfg"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find remote file $ifile "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "eff_cnn_fpga"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "eff_cnn_fpga_build_0.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../../../../../../../test_ip/eff_cnn_fpga"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xczu9eg-ffvb1156-2-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "xilinx.com:zcu102:part0:3.4" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "zcu106" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "155" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "155" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "155" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "155" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "155" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "155" -objects $obj
set_property -name "webtalk.xcelium_export_sim" -value "18" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "155" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "1533" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
set files [list \
 [file normalize "${origin_dir}/../ip_src/dsp_macro_addr_add_32_bit/dsp_macro_addr_add_32_bit.xci"] \
 [file normalize "${origin_dir}/../ip_src/dsp_macro_addr_mult_32_bit/dsp_macro_addr_mult_32_bit.xci"] \
 [file normalize "${origin_dir}/../ip_src/dsp_macro_mult_18_bit/dsp_macro_mult_18_bit.xci"] \
 [file normalize "${origin_dir}/../../design/rtl_pckg/arith_pckg.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/sys_arr/add_cell.sv"] \
 [file normalize "${origin_dir}/../../design/rtl_pckg/regmap_reg_pckg.sv"] \
 [file normalize "${origin_dir}/../../design/rtl_pckg/regmap_pckg.sv"] \
 [file normalize "${origin_dir}/../../design/rtl_pckg/proc_pipe_pckg.sv"] \
 [file normalize "${origin_dir}/../../sw/sim_scripts/add_tree.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/sys_arr/add_tree_wrapp.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/sys_arr/add_wrapp.sv"] \
 [file normalize "${origin_dir}/../../design/rtl_pckg/mem_pckg.sv"] \
 [file normalize "${origin_dir}/../../design/rtl_pckg/perf_cnt_pckg.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/addr_gen/addr_gen.sv"] \
 [file normalize "${origin_dir}/../../design/rtl_pckg/axi_if_pckg.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/batch_norm/batch_norm_unit.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/common/bram_simple_dual.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/addr_gen/conv_addr_gen.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/sys_arr/del_chain.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/top/dig_top.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/common/fifo.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/common/gen_mem_simple_dual.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/addr_gen/int_div.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/common/lead_zero_cnt.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/addr_gen/lin_addr_gen.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/interfaces/m_axis.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/main_ctrl/main_fsm.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/maxpool/maxpool_unit.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/main_memory/mmem.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/main_memory/mmem_if.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/sys_arr/mult_cell.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/sys_arr/mult_wrapp.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/nlin_f/nlin_f_unit.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/common/pipe_fifo.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/main_ctrl/regmap.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/main_ctrl/rst_gen.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/interfaces/s_axil.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/interfaces/s_axis.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/common/stream_wdt_conv.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/sys_arr/sys_arr.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/sys_arr/sys_arr_acc.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/sys_arr/sys_arr_bmm.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/sys_arr/sys_arr_cell.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/nlin_f/tanh_unit.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/common/uram_mem.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/top/dig_top_wrapp.v"] \
 [file normalize "${origin_dir}/../../design/rtl/common/gen_mem_single.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/common/bram_single.sv"] \
 [file normalize "${origin_dir}/../../design/rtl/sys_arr/test_arith_chain.sv"] \
 [file normalize "${origin_dir}/../../sim/testbench/tb_blck_proc_pipe.sv"] \
 [file normalize "${origin_dir}/../../sim/testbench/tb_macro_def.svh"] \
 [file normalize "${origin_dir}/../../sim/testbench/tb_pckg.sv"] \
 [file normalize "${origin_dir}/../../sim/testbench/tb_top.sv"] \
 [file normalize "${origin_dir}/../ip_src/tb_top_block_wrapper.v"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sources_1' fileset file properties for remote files
set file "$origin_dir/../ip_src/dsp_macro_addr_add_32_bit/dsp_macro_addr_add_32_bit.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "$origin_dir/../ip_src/dsp_macro_addr_mult_32_bit/dsp_macro_addr_mult_32_bit.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "$origin_dir/../ip_src/dsp_macro_mult_18_bit/dsp_macro_mult_18_bit.xci"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "generate_files_for_reference" -value "0" -objects $file_obj
set_property -name "registered_with_manager" -value "1" -objects $file_obj

set file "$origin_dir/../../design/rtl_pckg/arith_pckg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/sys_arr/add_cell.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl_pckg/regmap_reg_pckg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl_pckg/regmap_pckg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl_pckg/proc_pipe_pckg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../sw/sim_scripts/add_tree.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/sys_arr/add_tree_wrapp.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/sys_arr/add_wrapp.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl_pckg/mem_pckg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl_pckg/perf_cnt_pckg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/addr_gen/addr_gen.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl_pckg/axi_if_pckg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/batch_norm/batch_norm_unit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/common/bram_simple_dual.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/addr_gen/conv_addr_gen.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/sys_arr/del_chain.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/top/dig_top.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/common/fifo.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/common/gen_mem_simple_dual.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/addr_gen/int_div.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/common/lead_zero_cnt.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/addr_gen/lin_addr_gen.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/interfaces/m_axis.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/main_ctrl/main_fsm.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/maxpool/maxpool_unit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/main_memory/mmem.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/main_memory/mmem_if.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/sys_arr/mult_cell.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/sys_arr/mult_wrapp.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/nlin_f/nlin_f_unit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/common/pipe_fifo.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/main_ctrl/regmap.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/main_ctrl/rst_gen.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/interfaces/s_axil.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/interfaces/s_axis.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/common/stream_wdt_conv.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/sys_arr/sys_arr.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/sys_arr/sys_arr_acc.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/sys_arr/sys_arr_bmm.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/sys_arr/sys_arr_cell.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/nlin_f/tanh_unit.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/common/uram_mem.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/common/gen_mem_single.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/common/bram_single.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../design/rtl/sys_arr/test_arith_chain.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../sim/testbench/tb_blck_proc_pipe.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../sim/testbench/tb_macro_def.svh"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "Verilog Header" -objects $file_obj

set file "$origin_dir/../../sim/testbench/tb_pckg.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../sim/testbench/tb_top.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "dig_top_wrapp" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../constr/eff_cnn_constr.xdc"]"
set file_added [add_files -norecurse -fileset $obj [list $file]]
set file "$origin_dir/../constr/eff_cnn_constr.xdc"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
set files [list \
 [file normalize "${origin_dir}/../../sim/testbench/tb_axis_driver.sv"] \
 [file normalize "${origin_dir}/../../sim/testbench/tb_axi_driver.sv"] \
 [file normalize "${origin_dir}/../../sim/testbench/tb_axis_monitor.sv"] \
 [file normalize "${origin_dir}/../../sim/testbench/tb_top_power.sv"] \
 [file normalize "${origin_dir}/../wave_configs/tb_blck_proc_pipe_behav.wcfg"] \
]
add_files -norecurse -fileset $obj $files

# Set 'sim_1' fileset file properties for remote files
set file "$origin_dir/../../sim/testbench/tb_axis_driver.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../sim/testbench/tb_axi_driver.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../sim/testbench/tb_axis_monitor.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "$origin_dir/../../sim/testbench/tb_top_power.sv"
set file [file normalize $file]
set file_obj [get_files -of_objects [get_filesets sim_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj


# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "tb_top" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj
set_property -name "xsim.compile.xvlog.relax" -value "0" -objects $obj
set_property -name "xsim.elaborate.relax" -value "0" -objects $obj
set_property -name "xsim.simulate.log_all_signals" -value "1" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files dsp_macro_addr_add_32_bit.xci] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../vivado/ip_src/dsp_macro_addr_add_32_bit/dsp_macro_addr_add_32_bit.xci
}
if { [get_files dsp_macro_addr_mult_32_bit.xci] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../vivado/ip_src/dsp_macro_addr_mult_32_bit/dsp_macro_addr_mult_32_bit.xci
}
if { [get_files dsp_macro_mult_18_bit.xci] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../vivado/ip_src/dsp_macro_mult_18_bit/dsp_macro_mult_18_bit.xci
}
if { [get_files arith_pckg.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl_pckg/arith_pckg.sv
}
if { [get_files add_cell.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/sys_arr/add_cell.sv
}
if { [get_files regmap_reg_pckg.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl_pckg/regmap_reg_pckg.sv
}
if { [get_files regmap_pckg.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl_pckg/regmap_pckg.sv
}
if { [get_files proc_pipe_pckg.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl_pckg/proc_pipe_pckg.sv
}
if { [get_files add_tree.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../sw/sim_scripts/add_tree.sv
}
if { [get_files add_tree_wrapp.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/sys_arr/add_tree_wrapp.sv
}
if { [get_files add_wrapp.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/sys_arr/add_wrapp.sv
}
if { [get_files mem_pckg.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl_pckg/mem_pckg.sv
}
if { [get_files perf_cnt_pckg.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl_pckg/perf_cnt_pckg.sv
}
if { [get_files addr_gen.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/addr_gen/addr_gen.sv
}
if { [get_files axi_if_pckg.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl_pckg/axi_if_pckg.sv
}
if { [get_files batch_norm_unit.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/batch_norm/batch_norm_unit.sv
}
if { [get_files bram_simple_dual.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/common/bram_simple_dual.sv
}
if { [get_files conv_addr_gen.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/addr_gen/conv_addr_gen.sv
}
if { [get_files del_chain.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/sys_arr/del_chain.sv
}
if { [get_files dig_top.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/top/dig_top.sv
}
if { [get_files fifo.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/common/fifo.sv
}
if { [get_files gen_mem_simple_dual.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/common/gen_mem_simple_dual.sv
}
if { [get_files int_div.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/addr_gen/int_div.sv
}
if { [get_files lead_zero_cnt.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/common/lead_zero_cnt.sv
}
if { [get_files lin_addr_gen.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/addr_gen/lin_addr_gen.sv
}
if { [get_files m_axis.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/interfaces/m_axis.sv
}
if { [get_files main_fsm.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/main_ctrl/main_fsm.sv
}
if { [get_files maxpool_unit.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/maxpool/maxpool_unit.sv
}
if { [get_files mmem.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/main_memory/mmem.sv
}
if { [get_files mmem_if.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/main_memory/mmem_if.sv
}
if { [get_files mult_cell.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/sys_arr/mult_cell.sv
}
if { [get_files mult_wrapp.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/sys_arr/mult_wrapp.sv
}
if { [get_files nlin_f_unit.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/nlin_f/nlin_f_unit.sv
}
if { [get_files pipe_fifo.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/common/pipe_fifo.sv
}
if { [get_files regmap.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/main_ctrl/regmap.sv
}
if { [get_files rst_gen.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/main_ctrl/rst_gen.sv
}
if { [get_files s_axil.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/interfaces/s_axil.sv
}
if { [get_files s_axis.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/interfaces/s_axis.sv
}
if { [get_files stream_wdt_conv.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/common/stream_wdt_conv.sv
}
if { [get_files sys_arr.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/sys_arr/sys_arr.sv
}
if { [get_files sys_arr_acc.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/sys_arr/sys_arr_acc.sv
}
if { [get_files sys_arr_bmm.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/sys_arr/sys_arr_bmm.sv
}
if { [get_files sys_arr_cell.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/sys_arr/sys_arr_cell.sv
}
if { [get_files tanh_unit.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/nlin_f/tanh_unit.sv
}
if { [get_files uram_mem.sv] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/common/uram_mem.sv
}
if { [get_files dig_top_wrapp.v] == "" } {
  import_files -quiet -fileset sources_1 $origin_dir/../../design/rtl/top/dig_top_wrapp.v
}


# Proc to create BD tb_top_block
proc cr_bd_tb_top_block { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# dig_top_wrapp



  # CHANGE DESIGN NAME HERE
  set design_name tb_top_block

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axi4stream_vip:1.1\
  xilinx.com:ip:axi_vip:1.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  dig_top_wrapp\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports

  # Create ports
  set clk [ create_bd_port -dir I clk ]
  set rst_n [ create_bd_port -dir I rst_n ]

  # Create instance: axi4stream_vip_0, and set properties
  set axi4stream_vip_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi4stream_vip:1.1 axi4stream_vip_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.INTERFACE_MODE {MASTER} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axi4stream_vip_0

  # Create instance: axi4stream_vip_1, and set properties
  set axi4stream_vip_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi4stream_vip:1.1 axi4stream_vip_1 ]
  set_property -dict [ list \
   CONFIG.INTERFACE_MODE {SLAVE} \
   CONFIG.TDATA_NUM_BYTES {4} \
 ] $axi4stream_vip_1

  # Create instance: axi_vip_0, and set properties
  set axi_vip_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_vip:1.1 axi_vip_0 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {32} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {32} \
   CONFIG.HAS_BRESP {1} \
   CONFIG.HAS_BURST {0} \
   CONFIG.HAS_CACHE {0} \
   CONFIG.HAS_LOCK {0} \
   CONFIG.HAS_PROT {1} \
   CONFIG.HAS_QOS {0} \
   CONFIG.HAS_REGION {0} \
   CONFIG.HAS_RRESP {1} \
   CONFIG.HAS_WSTRB {1} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.INTERFACE_MODE {MASTER} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_BITS_PER_BYTE {0} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.SUPPORTS_NARROW {0} \
   CONFIG.WUSER_BITS_PER_BYTE {0} \
   CONFIG.WUSER_WIDTH {0} \
 ] $axi_vip_0

  # Create instance: dig_top_wrapp_0, and set properties
  set block_name dig_top_wrapp
  set block_cell_name dig_top_wrapp_0
  if { [catch {set dig_top_wrapp_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dig_top_wrapp_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create interface connections
  connect_bd_intf_net -intf_net axi4stream_vip_0_M_AXIS [get_bd_intf_pins axi4stream_vip_0/M_AXIS] [get_bd_intf_pins dig_top_wrapp_0/S_AXIS]
  connect_bd_intf_net -intf_net axi_vip_0_M_AXI [get_bd_intf_pins axi_vip_0/M_AXI] [get_bd_intf_pins dig_top_wrapp_0/S_AXI]
  connect_bd_intf_net -intf_net dig_top_wrapp_0_M_AXIS [get_bd_intf_pins axi4stream_vip_1/S_AXIS] [get_bd_intf_pins dig_top_wrapp_0/M_AXIS]

  # Create port connections
  connect_bd_net -net clk_1 [get_bd_ports clk] [get_bd_pins axi4stream_vip_0/aclk] [get_bd_pins axi4stream_vip_1/aclk] [get_bd_pins axi_vip_0/aclk] [get_bd_pins dig_top_wrapp_0/clk]
  connect_bd_net -net rst_n_1 [get_bd_ports rst_n] [get_bd_pins axi4stream_vip_0/aresetn] [get_bd_pins axi4stream_vip_1/aresetn] [get_bd_pins axi_vip_0/aresetn] [get_bd_pins dig_top_wrapp_0/rst_n]

  # Create address segments

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"1.12344",
   "Default View_TopLeft":"-1025,-61",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port port-id_clk -pg 1 -lvl 0 -x -330 -y -40 -defaultsOSRD
preplace port port-id_rst_n -pg 1 -lvl 0 -x -330 -y 20 -defaultsOSRD
preplace inst axi4stream_vip_0 -pg 1 -lvl 2 -x 10 -y 10 -defaultsOSRD
preplace inst axi4stream_vip_1 -pg 1 -lvl 4 -x 750 -y 100 -defaultsOSRD
preplace inst axi_vip_0 -pg 1 -lvl 1 -x -200 -y 250 -defaultsOSRD
preplace inst dig_top_wrapp_0 -pg 1 -lvl 3 -x 340 -y 490 -defaultsOSRD
preplace netloc clk_1 1 0 4 -310J 0 -90 80 130 100 N
preplace netloc rst_n_1 1 0 4 -300J 20 -100 90 110 120 N
preplace netloc axi4stream_vip_0_M_AXIS 1 2 1 140 10n
preplace netloc axi_vip_0_M_AXI 1 1 2 N 250 120
preplace netloc dig_top_wrapp_0_M_AXIS 1 3 1 470 80n
levelinfo -pg 1 -330 -200 10 340 750 870
pagesize -pg 1 -db -bbox -sgen -410 -130 870 910
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_tb_top_block()
cr_bd_tb_top_block ""
set_property REGISTERED_WITH_MANAGER "1" [get_files tb_top_block.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files tb_top_block.bd ] 

set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xczu9eg-ffvb1156-2-e -flow {Vivado Synthesis 2021} -strategy "Flow_PerfOptimized_high" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Flow_PerfOptimized_high" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2021" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Flow_PerfOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.directive" -value "PerformanceOptimized" -objects $obj
set_property -name "steps.synth_design.args.fsm_extraction" -value "one_hot" -objects $obj
set_property -name "steps.synth_design.args.keep_equivalent_registers" -value "1" -objects $obj
set_property -name "steps.synth_design.args.resource_sharing" -value "off" -objects $obj
set_property -name "steps.synth_design.args.no_lc" -value "1" -objects $obj
set_property -name "steps.synth_design.args.shreg_min_size" -value "5" -objects $obj

# Create 'synth_1_copy_1' run (if not found)
if {[string equal [get_runs -quiet synth_1_copy_1] ""]} {
    create_run -name synth_1_copy_1 -part xczu7ev-ffvc1156-2-e -flow {Vivado Synthesis 2021} -strategy "Flow_PerfOptimized_high" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Flow_PerfOptimized_high" [get_runs synth_1_copy_1]
  set_property flow "Vivado Synthesis 2021" [get_runs synth_1_copy_1]
}
set obj [get_runs synth_1_copy_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_copy_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1_copy_1] synth_1_copy_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_copy_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs synth_1_copy_1] synth_1_copy_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1_copy_1]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/synth_1" -objects $obj
set_property -name "strategy" -value "Flow_PerfOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.directive" -value "PerformanceOptimized" -objects $obj
set_property -name "steps.synth_design.args.fsm_extraction" -value "one_hot" -objects $obj
set_property -name "steps.synth_design.args.keep_equivalent_registers" -value "1" -objects $obj
set_property -name "steps.synth_design.args.resource_sharing" -value "off" -objects $obj
set_property -name "steps.synth_design.args.no_lc" -value "1" -objects $obj
set_property -name "steps.synth_design.args.shreg_min_size" -value "5" -objects $obj

# Create 'synth_1_copy_2' run (if not found)
if {[string equal [get_runs -quiet synth_1_copy_2] ""]} {
    create_run -name synth_1_copy_2 -part xczu7ev-ffvc1156-2-e -flow {Vivado Synthesis 2021} -strategy "Flow_PerfOptimized_high" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Flow_PerfOptimized_high" [get_runs synth_1_copy_2]
  set_property flow "Vivado Synthesis 2021" [get_runs synth_1_copy_2]
}
set obj [get_runs synth_1_copy_2]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_copy_2_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1_copy_2] synth_1_copy_2_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_copy_2_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs synth_1_copy_2] synth_1_copy_2_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1_copy_2]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/synth_1" -objects $obj
set_property -name "strategy" -value "Flow_PerfOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.flatten_hierarchy" -value "none" -objects $obj
set_property -name "steps.synth_design.args.directive" -value "PerformanceOptimized" -objects $obj
set_property -name "steps.synth_design.args.fsm_extraction" -value "one_hot" -objects $obj
set_property -name "steps.synth_design.args.keep_equivalent_registers" -value "1" -objects $obj
set_property -name "steps.synth_design.args.resource_sharing" -value "off" -objects $obj
set_property -name "steps.synth_design.args.no_lc" -value "1" -objects $obj
set_property -name "steps.synth_design.args.shreg_min_size" -value "5" -objects $obj

# Create 'synth_1_copy_3' run (if not found)
if {[string equal [get_runs -quiet synth_1_copy_3] ""]} {
    create_run -name synth_1_copy_3 -part xczu7ev-ffvc1156-2-e -flow {Vivado Synthesis 2021} -strategy "Flow_PerfOptimized_high" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Flow_PerfOptimized_high" [get_runs synth_1_copy_3]
  set_property flow "Vivado Synthesis 2021" [get_runs synth_1_copy_3]
}
set obj [get_runs synth_1_copy_3]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_copy_3_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1_copy_3] synth_1_copy_3_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_copy_3_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs synth_1_copy_3] synth_1_copy_3_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1_copy_3]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/synth_1" -objects $obj
set_property -name "strategy" -value "Flow_PerfOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.directive" -value "PerformanceOptimized" -objects $obj
set_property -name "steps.synth_design.args.fsm_extraction" -value "one_hot" -objects $obj
set_property -name "steps.synth_design.args.keep_equivalent_registers" -value "1" -objects $obj
set_property -name "steps.synth_design.args.resource_sharing" -value "off" -objects $obj
set_property -name "steps.synth_design.args.no_lc" -value "1" -objects $obj
set_property -name "steps.synth_design.args.shreg_min_size" -value "5" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xczu9eg-ffvb1156-2-e -flow {Vivado Implementation 2021} -strategy "Flow_RunPostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Flow_RunPostRoutePhysOpt" [get_runs impl_1]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "strategy" -value "Flow_RunPostRoutePhysOpt" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_1' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_1] ""]} {
    create_run -name impl_1_copy_1 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Flow_RunPostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Flow_RunPostRoutePhysOpt" [get_runs impl_1_copy_1]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_1]
}
set obj [get_runs impl_1_copy_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_1
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_1] impl_1_copy_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_1]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Flow_RunPostRoutePhysOpt" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_2' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_2] ""]} {
    create_run -name impl_1_copy_2 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Flow_RunPostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Flow_RunPostRoutePhysOpt" [get_runs impl_1_copy_2]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_2]
}
set obj [get_runs impl_1_copy_2]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_2_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_2_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_2_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_2_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_2_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_2_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_2_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_2
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_2] impl_1_copy_2_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_2]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Flow_RunPostRoutePhysOpt" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_3' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_3] ""]} {
    create_run -name impl_1_copy_3 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Performance_ExplorePostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_ExplorePostRoutePhysOpt" [get_runs impl_1_copy_3]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_3]
}
set obj [get_runs impl_1_copy_3]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_3_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_3_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_3_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_3_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_3_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_3_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_3_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_3
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_3] impl_1_copy_3_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_3]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Performance_ExplorePostRoutePhysOpt" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_4' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_4] ""]} {
    create_run -name impl_1_copy_4 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Flow_RunPostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Flow_RunPostRoutePhysOpt" [get_runs impl_1_copy_4]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_4]
}
set obj [get_runs impl_1_copy_4]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_4_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_4_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_4_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_4_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_4_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_4_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_4_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_4
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_4] impl_1_copy_4_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_4]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Flow_RunPostRoutePhysOpt" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_5' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_5] ""]} {
    create_run -name impl_1_copy_5 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1_copy_5]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_5]
}
set obj [get_runs impl_1_copy_5]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_5_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_5_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_5_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_5_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_5_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_5_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_5_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_5_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_5_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_5_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_5_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_5_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_5_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_5_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_5_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_5_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_5_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_5_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_5_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_5_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_5_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_5_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_5_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_5_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_5
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_5] impl_1_copy_5_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_5]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_6' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_6] ""]} {
    create_run -name impl_1_copy_6 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Flow_RunPostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Flow_RunPostRoutePhysOpt" [get_runs impl_1_copy_6]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_6]
}
set obj [get_runs impl_1_copy_6]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_6_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_6_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_6_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_6_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_6_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_6_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_6_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_6_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_6_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_6_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_6_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_6_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_6_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_6_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_6_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_6_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_6_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_6_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_6_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_6_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_6_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_6_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_6_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_6_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_6
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_6] impl_1_copy_6_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_6]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Flow_RunPostRoutePhysOpt" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_7' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_7] ""]} {
    create_run -name impl_1_copy_7 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Performance_ExplorePostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_ExplorePostRoutePhysOpt" [get_runs impl_1_copy_7]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_7]
}
set obj [get_runs impl_1_copy_7]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_7_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_7_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_opt_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "DRC" -objects $obj

}
# Create 'impl_1_copy_7_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_7_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_7_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_place_report_io_0]
if { $obj != "" } {
set_property -name "display_name" -value "IO" -objects $obj

}
# Create 'impl_1_copy_7_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_place_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "Utilization" -objects $obj

}
# Create 'impl_1_copy_7_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "display_name" -value "Control Sets" -objects $obj
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_7_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_7_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_7_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_7_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_7_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_7_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_7_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "DRC" -objects $obj

}
# Create 'impl_1_copy_7_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_methodology_0]
if { $obj != "" } {
set_property -name "display_name" -value "Methodology" -objects $obj

}
# Create 'impl_1_copy_7_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_power_0]
if { $obj != "" } {
set_property -name "display_name" -value "Power" -objects $obj

}
# Create 'impl_1_copy_7_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_route_status_0]
if { $obj != "" } {
set_property -name "display_name" -value "Route Status" -objects $obj

}
# Create 'impl_1_copy_7_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_7_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_7_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "Clock Utilization" -objects $obj

}
# Create 'impl_1_copy_7_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "Bus Skew" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_7_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_7_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_7_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_7
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_7] impl_1_copy_7_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "Bus Skew" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_7]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Performance_ExplorePostRoutePhysOpt" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_8' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_8] ""]} {
    create_run -name impl_1_copy_8 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Performance_ExplorePostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_ExplorePostRoutePhysOpt" [get_runs impl_1_copy_8]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_8]
}
set obj [get_runs impl_1_copy_8]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_8_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_8_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_opt_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "DRC" -objects $obj

}
# Create 'impl_1_copy_8_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_8_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_8_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_place_report_io_0]
if { $obj != "" } {
set_property -name "display_name" -value "IO" -objects $obj

}
# Create 'impl_1_copy_8_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_place_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "Utilization" -objects $obj

}
# Create 'impl_1_copy_8_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "display_name" -value "Control Sets" -objects $obj
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_8_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_8_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_8_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_8_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_8_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_8_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_8_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "DRC" -objects $obj

}
# Create 'impl_1_copy_8_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_methodology_0]
if { $obj != "" } {
set_property -name "display_name" -value "Methodology" -objects $obj

}
# Create 'impl_1_copy_8_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_power_0]
if { $obj != "" } {
set_property -name "display_name" -value "Power" -objects $obj

}
# Create 'impl_1_copy_8_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_route_status_0]
if { $obj != "" } {
set_property -name "display_name" -value "Route Status" -objects $obj

}
# Create 'impl_1_copy_8_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_8_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_8_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "Clock Utilization" -objects $obj

}
# Create 'impl_1_copy_8_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "Bus Skew" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_8_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_8_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_8_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_8
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_8] impl_1_copy_8_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "Bus Skew" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_8]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Performance_ExplorePostRoutePhysOpt" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_9' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_9] ""]} {
    create_run -name impl_1_copy_9 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Performance_ExplorePostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_ExplorePostRoutePhysOpt" [get_runs impl_1_copy_9]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_9]
}
set obj [get_runs impl_1_copy_9]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_9_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_9_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_9_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_9_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_9_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_9_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_9_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_9_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_9_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_9_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_9_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_9_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_9_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_9_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_9_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_9_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_9_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_9_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_9_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_9_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_9_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_9_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_9_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_9_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_9
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_9] impl_1_copy_9_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_9]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Performance_ExplorePostRoutePhysOpt" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_10' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_10] ""]} {
    create_run -name impl_1_copy_10 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Performance_ExtraTimingOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_ExtraTimingOpt" [get_runs impl_1_copy_10]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_10]
}
set obj [get_runs impl_1_copy_10]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_10_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_10_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_10_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_10_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_10_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_10_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_10_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_10_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_10_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_10_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_10_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_10_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_10_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_10_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_10_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_10_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_10_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_10_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_10_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_10_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_10_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_10_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_10_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_10_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_10
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_10] impl_1_copy_10_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_10]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Performance_ExtraTimingOpt" -objects $obj
set_property -name "steps.place_design.args.directive" -value "ExtraTimingOpt" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "NoTimingRelaxation" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_11' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_11] ""]} {
    create_run -name impl_1_copy_11 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Flow_RunPostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Flow_RunPostRoutePhysOpt" [get_runs impl_1_copy_11]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_11]
}
set obj [get_runs impl_1_copy_11]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_11_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_11_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_opt_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "DRC" -objects $obj

}
# Create 'impl_1_copy_11_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_11_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_11_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_place_report_io_0]
if { $obj != "" } {
set_property -name "display_name" -value "IO" -objects $obj

}
# Create 'impl_1_copy_11_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_place_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "Utilization" -objects $obj

}
# Create 'impl_1_copy_11_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "display_name" -value "Control Sets" -objects $obj
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_11_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_11_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_11_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_11_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_11_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_11_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_11_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "DRC" -objects $obj

}
# Create 'impl_1_copy_11_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_methodology_0]
if { $obj != "" } {
set_property -name "display_name" -value "Methodology" -objects $obj

}
# Create 'impl_1_copy_11_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_power_0]
if { $obj != "" } {
set_property -name "display_name" -value "Power" -objects $obj

}
# Create 'impl_1_copy_11_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_route_status_0]
if { $obj != "" } {
set_property -name "display_name" -value "Route Status" -objects $obj

}
# Create 'impl_1_copy_11_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_11_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_11_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "Clock Utilization" -objects $obj

}
# Create 'impl_1_copy_11_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "Bus Skew" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_11_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_11_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_11_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_11
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_11] impl_1_copy_11_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "Bus Skew" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_11]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Flow_RunPostRoutePhysOpt" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_12' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_12] ""]} {
    create_run -name impl_1_copy_12 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Performance_ExplorePostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_ExplorePostRoutePhysOpt" [get_runs impl_1_copy_12]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_12]
}
set obj [get_runs impl_1_copy_12]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_12_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_12_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_12_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_12_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_12_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_12_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_12_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_12_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_12_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_12_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_12_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_12_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_12_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_12_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_12_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_12_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_12_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_12_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_12_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_12_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_12_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_12_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_12_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_12_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_12
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_12] impl_1_copy_12_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_12]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Performance_ExplorePostRoutePhysOpt" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_13' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_13] ""]} {
    create_run -name impl_1_copy_13 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Flow_RunPostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Flow_RunPostRoutePhysOpt" [get_runs impl_1_copy_13]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_13]
}
set obj [get_runs impl_1_copy_13]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_13_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_13_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_13_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_13_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_13_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_13_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_13_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_13_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_13_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_13_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_13_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_13_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_13_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_13_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_13_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_13_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_13_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_13_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_13_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_13_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_13_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_13_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_13_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_13_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_13
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_13] impl_1_copy_13_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_13]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Flow_RunPostRoutePhysOpt" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_14' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_14] ""]} {
    create_run -name impl_1_copy_14 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Performance_RefinePlacement" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_RefinePlacement" [get_runs impl_1_copy_14]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_14]
}
set obj [get_runs impl_1_copy_14]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_14_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_14_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_opt_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "DRC" -objects $obj

}
# Create 'impl_1_copy_14_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_14_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_14_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_place_report_io_0]
if { $obj != "" } {
set_property -name "display_name" -value "IO" -objects $obj

}
# Create 'impl_1_copy_14_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_place_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "Utilization" -objects $obj

}
# Create 'impl_1_copy_14_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "display_name" -value "Control Sets" -objects $obj
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_14_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_14_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_14_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_14_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_14_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_14_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_14_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "DRC" -objects $obj

}
# Create 'impl_1_copy_14_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_methodology_0]
if { $obj != "" } {
set_property -name "display_name" -value "Methodology" -objects $obj

}
# Create 'impl_1_copy_14_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_power_0]
if { $obj != "" } {
set_property -name "display_name" -value "Power" -objects $obj

}
# Create 'impl_1_copy_14_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_route_status_0]
if { $obj != "" } {
set_property -name "display_name" -value "Route Status" -objects $obj

}
# Create 'impl_1_copy_14_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_14_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "display_name" -value "Incremental Reuse" -objects $obj

}
# Create 'impl_1_copy_14_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "Clock Utilization" -objects $obj

}
# Create 'impl_1_copy_14_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "Bus Skew" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_14_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "Timing Summary" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_14_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_14_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_14
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_14] impl_1_copy_14_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "Bus Skew" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_14]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Performance_RefinePlacement" -objects $obj
set_property -name "steps.place_design.args.directive" -value "ExtraPostPlacementOpt" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_1_copy_15' run (if not found)
if {[string equal [get_runs -quiet impl_1_copy_15] ""]} {
    create_run -name impl_1_copy_15 -part xczu7ev-ffvc1156-2-e -flow {Vivado Implementation 2021} -strategy "Performance_ExplorePostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_ExplorePostRoutePhysOpt" [get_runs impl_1_copy_15]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1_copy_15]
}
set obj [get_runs impl_1_copy_15]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_copy_15_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_15_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_15_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_15_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_15_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_15_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_15_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_copy_15_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_15_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_copy_15_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_copy_15_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_15_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_15_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_15_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_15_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_15_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_15_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_15_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_1_copy_15_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_15_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_copy_15_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_15_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_copy_15_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_copy_15_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1_copy_15
}
set obj [get_report_configs -of_objects [get_runs impl_1_copy_15] impl_1_copy_15_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1_copy_15]
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/eff_cnn_fpga.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Performance_ExplorePostRoutePhysOpt" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
